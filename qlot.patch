diff -u -r a/quicklisp-client/asdf.lisp b/quicklisp-client/asdf.lisp
--- a/quicklisp-client/asdf.lisp	2024-03-02 08:52:00.000000000 -0500
+++ b/quicklisp-client/asdf.lisp	2024-03-04 16:29:38.525790555 -0500
@@ -7197,7 +7197,7 @@
             (or (remove nil (getenv-absolute-directories "XDG_DATA_DIRS"))
                 (os-cond
                  ((os-windows-p) (mapcar 'get-folder-path '(:appdata :common-appdata)))
-                 (t (mapcar 'parse-unix-namestring '("/usr/local/share/" "/usr/share/")))))))
+                 (t (mapcar 'parse-unix-namestring '("/usr/lib/sdk/sbcl/share" "/usr/local/share/" "/usr/share/")))))))
 
   (defun xdg-config-dirs (&rest more)
     "The preference-ordered set of additional base paths to search for configuration files.
diff -u -r a/scripts/install.sh b/scripts/install.sh
--- a/scripts/install.sh	2024-03-02 08:52:00.000000000 -0500
+++ b/scripts/install.sh	2024-03-04 16:56:50.057022479 -0500
@@ -2,44 +2,44 @@
 
 set -eux
 
-QLOT_SOURCE_DIR=$(cd "$(dirname "$0")/../" 2>&1 >/dev/null && pwd -P)
+QLOT_SOURCE_DIR="$QLOT_BASE/lib/qlot"
 
 ansi() {
-  [ $# -gt 0 ] || return
-  printf "\033[%sm" "$@"
+	[ $# -gt 0 ] || return
+	printf "\033[%sm" "$@"
 }
 [ -t 1 ] || ansi() { :; }
 errmsg() { printf "%sError: %s%s\n" "$(ansi 31)" "$1" "$(ansi 0)"; }
 
-if [ `id -u` -eq 0 ]; then
-  QLOT_BASE=${QLOT_BASE:-/usr/local}
-  QLOT_BIN_DIR=${QLOT_BIN_DIR:-$QLOT_BASE/bin}
-else
-  QLOT_BIN_DIR=${QLOT_BIN_DIR:-${XDG_BIN_HOME:-~/.qlot/bin}}
-fi
+# if [ `id -u` -eq 0 ]; then
+QLOT_BASE=${QLOT_BASE:-/usr/local}
+QLOT_BIN_DIR=${QLOT_BIN_DIR:-$QLOT_BASE/bin}
+# else
+#   QLOT_BIN_DIR=${QLOT_BIN_DIR:-${XDG_BIN_HOME:-~/.qlot/bin}}
+# fi
 
 mkdir -p "$QLOT_BIN_DIR"
 
 if [ -f "$QLOT_SOURCE_DIR/.bundle-libs/bundle.lisp" ]; then
-  SETUP_FILE="$QLOT_SOURCE_DIR/.bundle-libs/bundle.lisp"
+	SETUP_FILE="$QLOT_SOURCE_DIR/.bundle-libs/bundle.lisp"
 elif [ -f "$QLOT_SOURCE_DIR/.qlot/setup.lisp" ]; then
-  SETUP_FILE="$QLOT_SOURCE_DIR/.qlot/setup.lisp"
+	SETUP_FILE="$QLOT_SOURCE_DIR/.qlot/setup.lisp"
 else
-  errmsg "Qlot isn't setup yet. Run 'scripts/setup.sh' first."
-  exit 1
+	errmsg "Qlot isn't setup yet. Run 'scripts/setup.sh' first."
+	exit 1
 fi
 
 printf '#!/bin/sh\nexport QLOT_SETUP_FILE=%s\nexec %s/scripts/run.sh "$@"\n' \
-  "$SETUP_FILE" "$QLOT_SOURCE_DIR" > "$QLOT_BIN_DIR/qlot"
+	"$SETUP_FILE" "$QLOT_SOURCE_DIR" >"$QLOT_BIN_DIR/qlot"
 chmod 755 "$QLOT_BIN_DIR/qlot"
 
-if [ `id -u` -eq 0 ]; then
-  REGISTRY_DIR=/usr/local/share/common-lisp/systems
-else
-  REGISTRY_DIR="${XDG_DATA_HOME:-~/.local/share}/common-lisp/systems"
-fi
+# if [ $(id -u) -eq 0 ]; then
+REGISTRY_DIR=${QLOT_BASE:-/usr/local}/share/common-lisp/systems
+# else
+#   REGISTRY_DIR="${XDG_DATA_HOME:-~/.local/share}/common-lisp/systems"
+# fi
 
 mkdir -p "$REGISTRY_DIR"
 if [ ! -f "$REGISTRY_DIR/qlot.asd" ]; then
-  ln -s "$QLOT_SOURCE_DIR/qlot.asd" "$REGISTRY_DIR/qlot.asd"
+	ln -s "$QLOT_SOURCE_DIR/qlot.asd" "$REGISTRY_DIR/qlot.asd"
 fi
diff -u -r a/scripts/qlot-installer.sh b/scripts/qlot-installer.sh
--- a/scripts/qlot-installer.sh	2024-03-02 08:52:00.000000000 -0500
+++ b/scripts/qlot-installer.sh	2024-03-04 16:49:34.231877860 -0500
@@ -5,28 +5,28 @@
 VERSION=${VERSION:-heads/master}
 QLOT_ARCHIVE=${QLOT_ARCHIVE:-https://github.com/fukamachi/qlot/archive/refs/$VERSION.tar.gz}
 
-if [ `id -u` -eq 0 ]; then
-  QLOT_BASE=${QLOT_BASE:-/usr/local}
-  QLOT_HOME=${QLOT_HOME:-"$QLOT_BASE/lib/qlot"}
-  QLOT_BIN_DIR=${QLOT_BIN_DIR:-"$QLOT_BASE/bin"}
-  QLOT_TMP_DIR=/tmp/qlot
-  QLOT_SOURCE_DIR="$QLOT_HOME"
-  QLOT_LOGS_DIR=/tmp/qlot/logs
-else
-  if [ -n "${XDG_DATA_HOME:-}" ]; then
-    QLOT_HOME="$XDG_DATA_HOME/qlot"
-  else
-    QLOT_HOME=${QLOT_HOME:-~/.qlot}
-  fi
-  QLOT_BIN_DIR=${QLOT_BIN_DIR:-${XDG_BIN_HOME:-"$QLOT_HOME/bin"}}
-  QLOT_TMP_DIR="$QLOT_HOME/tmp"
-  QLOT_SOURCE_DIR=${QLOT_SOURCE_DIR:-"$QLOT_HOME/qlot"}
-  QLOT_LOGS_DIR="$QLOT_HOME/logs"
-fi
+# if [ `id -u` -eq 0 ]; then
+QLOT_BASE=${QLOT_BASE:-/usr/local}
+QLOT_HOME=${QLOT_HOME:-"$QLOT_BASE/lib/qlot"}
+QLOT_BIN_DIR=${QLOT_BIN_DIR:-"$QLOT_BASE/bin"}
+QLOT_TMP_DIR=/tmp/qlot
+QLOT_SOURCE_DIR="$QLOT_HOME"
+QLOT_LOGS_DIR=/tmp/qlot/logs
+# else
+#   if [ -n "${XDG_DATA_HOME:-}" ]; then
+#     QLOT_HOME="$XDG_DATA_HOME/qlot"
+#   else
+#     QLOT_HOME=${QLOT_HOME:-~/.qlot}
+#   fi
+#   QLOT_BIN_DIR=${QLOT_BIN_DIR:-${XDG_BIN_HOME:-"$QLOT_HOME/bin"}}
+#   QLOT_TMP_DIR="$QLOT_HOME/tmp"
+#   QLOT_SOURCE_DIR=${QLOT_SOURCE_DIR:-"$QLOT_HOME/qlot"}
+#   QLOT_LOGS_DIR="$QLOT_HOME/logs"
+# fi
 
 ansi() {
-  [ $# -gt 0 ] || return
-  printf "\033[%sm" "$@"
+	[ $# -gt 0 ] || return
+	printf "\033[%sm" "$@"
 }
 [ -t 1 ] || ansi() { :; }
 errmsg() { printf "%sError: %s%s\n" "$(ansi 31 1)" "$1" "$(ansi 0)"; }
@@ -34,36 +34,35 @@
 success() { printf "%s%s%s\n" "$(ansi 32)" "$1" "$(ansi 0)"; }
 
 check_requirement() {
-  for cmd in "$@"
-  do
-    if [ "$(which "$cmd" 2>/dev/null)" != "" ]; then
-      return
-    fi
-  done
-  if [ $# -eq 1 ]; then
-    errmsg "$1 is required to install Qlot"
-  else
-    printf -v all_cmds '%s, ' "$@"
-    errmsg "One of ${all_cmds%, } is required to install Qlot"
-  fi
-  exit 1
+	for cmd in "$@"; do
+		if [ "$(which "$cmd" 2>/dev/null)" != "" ]; then
+			return
+		fi
+	done
+	if [ $# -eq 1 ]; then
+		errmsg "$1 is required to install Qlot"
+	else
+		printf -v all_cmds '%s, ' "$@"
+		errmsg "One of ${all_cmds%, } is required to install Qlot"
+	fi
+	exit 1
 }
 
 check_requirement "which"
 
 if [ "$(which sbcl 2>/dev/null)" != "" ]; then
-  lisp="sbcl"
+	lisp="sbcl"
 elif [ "$(which ros 2>/dev/null)" != "" ]; then
-  lisp="ros +Q -L sbcl-bin run --"
+	lisp="ros +Q -L sbcl-bin run --"
 else
-  errmsg "sbcl is required to setup Qlot."
-  exit 1
+	errmsg "sbcl is required to setup Qlot."
+	exit 1
 fi
 
 qlot_version() {
-  $lisp --noinform --no-sysinit --no-userinit --non-interactive \
-    --eval '(require :asdf)' --eval "(asdf:load-asd \"$QLOT_SOURCE_DIR/qlot.asd\")" \
-    --eval '(progn (princ (asdf:component-version (asdf:find-system :qlot))) (fresh-line))'
+	$lisp --noinform --no-sysinit --no-userinit --non-interactive \
+		--eval '(require :asdf)' --eval "(asdf:load-asd \"$QLOT_SOURCE_DIR/qlot.asd\")" \
+		--eval '(progn (princ (asdf:component-version (asdf:find-system :qlot))) (fresh-line))'
 }
 
 check_requirement "curl" "wget"
@@ -80,20 +79,20 @@
 # Download
 
 if [ -f "$QLOT_TMP_DIR/qlot.tar.gz" ]; then
-  echo "Already have an archive: $QLOT_TMP_DIR/qlot.tar.gz"
+	echo "Already have an archive: $QLOT_TMP_DIR/qlot.tar.gz"
 else
-  echo -n "Downloading an archive from '$QLOT_ARCHIVE'..."
-  if [ "$(which curl 2>/dev/null)" != "" ]; then
-    curl -sL "$QLOT_ARCHIVE" -o "$QLOT_TMP_DIR/qlot.tar.gz"
-  else
-    wget -q "$QLOT_ARCHIVE" -O "$QLOT_TMP_DIR/qlot.tar.gz"
-  fi
+	echo -n "Downloading an archive from '$QLOT_ARCHIVE'..."
+	if [ "$(which curl 2>/dev/null)" != "" ]; then
+		curl -sL "$QLOT_ARCHIVE" -o "$QLOT_TMP_DIR/qlot.tar.gz"
+	else
+		wget -q "$QLOT_ARCHIVE" -O "$QLOT_TMP_DIR/qlot.tar.gz"
+	fi
 fi
 
 tar zxf "$QLOT_TMP_DIR/qlot.tar.gz" -C "$QLOT_TMP_DIR"
 
 if [ -d "$QLOT_SOURCE_DIR/" ]; then
-  rm -rf "$QLOT_SOURCE_DIR/"
+	rm -rf "$QLOT_SOURCE_DIR/"
 fi
 mv "$(find "$QLOT_TMP_DIR" -maxdepth 1 -mindepth 1 -type d -name "qlot*")" "$QLOT_SOURCE_DIR"
 
@@ -107,31 +106,31 @@
 mkdir -p "$QLOT_LOGS_DIR"
 install_log_path="$QLOT_LOGS_DIR/install-$(date '+%s').log"
 echo "Setting it up. This may take a while..."
-scripts/setup.sh > "$install_log_path" 2>&1
+scripts/setup.sh >"$install_log_path" 2>&1
 
 if [ $? -ne 0 ]; then
-  errmsg "Setup process is failed. See '$install_log_path' for the detailed logs."
-  errmsg "If it can be a bug, please report an issue at https://github.com/fukamachi/qlot/issues."
-  exit $?
+	errmsg "Setup process is failed. See '$install_log_path' for the detailed logs."
+	errmsg "If it can be a bug, please report an issue at https://github.com/fukamachi/qlot/issues."
+	exit $?
 fi
 
-QLOT_BIN_DIR="$QLOT_BIN_DIR" scripts/install.sh >> "$install_log_path" 2>&1
+QLOT_BIN_DIR="$QLOT_BIN_DIR" scripts/install.sh >>"$install_log_path" 2>&1
 
 if [ $? -ne 0 ]; then
-  errmsg "Install process is failed. See '$install_log_path' for the detailed logs."
-  errmsg "If it can be a bug, please report an issue at https://github.com/fukamachi/qlot/issues."
-  exit $?
+	errmsg "Install process is failed. See '$install_log_path' for the detailed logs."
+	errmsg "If it can be a bug, please report an issue at https://github.com/fukamachi/qlot/issues."
+	exit $?
 fi
 
 echo ''
 success "Qlot v$(qlot_version) has been successfully installed under '$QLOT_HOME'."
 echo ''
 
-if [ `id -u` -ne 0 ]; then
-  echo "The executable script is located at '$QLOT_BIN_DIR/qlot'."
-  echo "To make it runnable by your shell, please add '$QLOT_BIN_DIR' to '\$PATH'."
-  echo ''
-  echo "    export PATH=\"$QLOT_BIN_DIR:\$PATH\""
-  echo ''
-fi
+# if [ `id -u` -ne 0 ]; then
+echo "The executable script is located at '$QLOT_BIN_DIR/qlot'."
+echo "To make it runnable by your shell, please add '$QLOT_BIN_DIR' to '\$PATH'."
+echo ''
+echo "    export PATH=\"$QLOT_BIN_DIR:\$PATH\""
+echo ''
+# fi
 echo 'Enjoy!'
diff -u -r a/scripts/setup.sh b/scripts/setup.sh
--- a/scripts/setup.sh	2024-03-02 08:52:00.000000000 -0500
+++ b/scripts/setup.sh	2024-03-04 16:56:32.015099286 -0500
@@ -2,7 +2,7 @@
 
 set -eux
 
-QLOT_SOURCE_DIR=$(cd "$(dirname "$0")/../" 2>&1 >/dev/null && pwd -P)
+QLOT_SOURCE_DIR="$QLOT_BASE/lib/qlot"
 
 ansi() {
   [ $# -gt 0 ] || return
